int dp[10001][2][101];
    int solve(int i, int buy, vector<int>& prices, int cap){
        
        if(cap==0 || i==prices.size() ) return 0;
        
        if(dp[i][buy][cap]!=-1) return dp[i][buy][cap];
        
        if(buy==1){
            
     return dp[i][buy][cap]=max(-prices[i]+solve(i+1,0,prices,cap),solve(i+1,1,prices,cap));
        }
       
      return dp[i][buy][cap]=max(prices[i]+solve(i+1,1,prices,cap-1),solve(i+1,0,prices,cap));
        
    }
   
    int maxProfit(int k, vector<int>& prices) {
         memset(dp,-1,sizeof(dp));
        return solve(0,1,prices,k);
    }