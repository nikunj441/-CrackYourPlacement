int maxDistance(vector<vector<int>>& grid) {
        int n=grid.size();
        queue<pair<int,int>> q;

        vector<vector<int>> visited = grid;

        for(int i=0; i<grid.size(); i++){
            for(int j=0; j<grid[0].size(); ++j){
                if(visited[i][j]==1) q.push({i,j});
            }
        }

        int dis = -1;
        vector<pair<int,int>> dirs = {{-1,0},{1,0},{0,1},{0,-1}};
        if(q.size()==0 || q.size()==n*n) return -1;
        while(!q.empty()){
            int size = q.size();
            while (size--) {
                auto [x, y] = q.front();
                q.pop();
                for (auto [dx, dy] : dirs) {
                    int i = x + dx, j = y + dy;
                    if (i >= 0 && i < n && j >= 0 && j < n && visited[i][j] == 0) {
                        visited[i][j] = 1;
                        q.push({i, j});
                    }
                }
            }
            dis++;
        }
        return dis;
        

    }